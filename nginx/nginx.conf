# Nginx プロセスの実行ユーザーを指定
user  nginx;
# worker プロセスの数を自動設定
worker_processes  auto;

# エラーログを指定
# ログレベルは `debug`, `info`, `notice`, `warn`, `error`, `crit`, `alert`, `emerg` のいずれかを指定
# `warn` 以上のログを出力
# Docker環境では、標準出力に出力されるため、通常はコメントアウト
#error_log  /var/log/nginx/error.log warn;
# PIDファイルの場所を指定
pid        /var/run/nginx.pid;

events {
    # worker プロセスあたりの最大接続数を指定
    worker_connections 1024;
}

http {
    # ログのフォーマットを指定
    # （Docker環境では、標準出力に出力されるため、通常はコメントアウト）
    # `$remote_addr` はクライアントのIPアドレス
    # `$remote_user` は認証されたユーザー名
    # `$time_local` はローカルタイム
    # `$request` はリクエストライン（メソッド、URI、HTTPバージョン）
    # `$status` はレスポンスステータスコード
    # `$body_bytes_sent` は送信されたボディのバイト数
    # `$http_referer` はリクエストのリファラー
    # `$http_user_agent` はクライアントのユーザーエージェント
    # `$http_x_forwarded_for` はX-Forwarded-Forヘッダー
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    # アクセスログの出力先を指定
    # Docker環境では、標準出力に出力されるため、通常はコメントアウト
    #access_log  /var/log/nginx/access.log  main;

    # Keepalive タイムアウトを指定
    # クライアントが接続を維持する時間を指定
    keepalive_timeout  65;

    # 流量制限の設定
    # 1秒あたりのリクエスト数を制限
    # `limit_conn_zone` は、IPアドレスごとに同時接続数を制限するゾーンを定義
    # `limit_req_zone` は、IPアドレスごとにリクエストを制限するゾーンを定義
    # `zone=conn_limit_per_ip:10m` は、10MBのメモリを使用してIPアドレスごとに同時接続数を制限するゾーンを定義
    # `zone=req_limit_per_ip:10m` は、10MBのメモリを使用してIPアドレスごとにリクエストを制限するゾーンを定義
    # `rate=Xr/s` は、1秒あたりXリクエストの制限を設定
    #limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    #limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=10r/s;

    server {
        # http(80)をlisten
        listen 80;
        listen [::]:80;

        # ホスト名を指定
        server_name 128kvpn.net www.128kvpn.net;

        # httpsへリダイレクト
        return 301 https://128kvpn.net$request_uri;
    }

    server {
        # https(443)をlisten
        listen       443 ssl;
        listen       [::]:443 ssl;

        # ホスト名を指定
        server_name www.128kvpn.net;

        # 証明書のファイルを指定
        ssl_certificate /etc/nginx/fullchain.pem;
        ssl_certificate_key /etc/nginx/privkey.pem;

        # www無しへリダイレクト
        return 301 https://128kvpn.net$request_uri;
    }

    server {
        # https(443)をlisten
        listen       443 ssl;
        listen       [::]:443 ssl;

        # ホスト名を指定
        server_name 128kvpn.net;

        # http2を有効化
        http2 on;

        # 証明書のファイルを指定
        ssl_certificate /etc/nginx/fullchain.pem;
        ssl_certificate_key /etc/nginx/privkey.pem;

        # SSL設定
        # `ssl_protocols` は使用するSSL/TLSプロトコルを指定
        # `ssl_ciphers` は使用する暗号スイートを指定
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        # 流量制限の設定
        # IPアドレスごとに同時接続数を制限
        # `limit_conn` は、同時接続数の制限を適用
        # `limit_req` は、リクエストの制限を適用
        # `10` は、同時接続数の上限を指定
        # `burst=10` は、バースト時に許可される追加のリクエスト数を指定
        # `nodelay` は、バースト時に遅延を発生させない設定
        #limit_conn conn_limit_per_ip 10;
        #limit_req zone=req_limit_per_ip burst=10 nodelay;

        location / {
            # `app`へ転送（リバースプロキシ）
            proxy_pass http://app:3000;
        }
    }
}